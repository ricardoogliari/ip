// Mocks generated by Mockito 5.4.4 from annotations
// in myapp/test/rest_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:myapp/model/geo_data.dart' as _i2;
import 'package:myapp/repositories/rest_repository.dart' as _i5;
import 'package:myapp/source/remote/rest_client.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGeoData_0 extends _i1.SmartFake implements _i2.GeoData {
  _FakeGeoData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestClient extends _i1.Mock implements _i3.RestClient {
  MockRestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GeoData> getGeoData(String? ip) => (super.noSuchMethod(
        Invocation.method(
          #getGeoData,
          [ip],
        ),
        returnValue: _i4.Future<_i2.GeoData>.value(_FakeGeoData_0(
          this,
          Invocation.method(
            #getGeoData,
            [ip],
          ),
        )),
      ) as _i4.Future<_i2.GeoData>);
}

/// A class which mocks [RestRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestRepository extends _i1.Mock implements _i5.RestRepository {
  MockRestRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GeoData> getDataByIp({required String? ip}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDataByIp,
          [],
          {#ip: ip},
        ),
        returnValue: _i4.Future<_i2.GeoData>.value(_FakeGeoData_0(
          this,
          Invocation.method(
            #getDataByIp,
            [],
            {#ip: ip},
          ),
        )),
      ) as _i4.Future<_i2.GeoData>);
}
